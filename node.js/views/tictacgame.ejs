<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>

  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-color: #f0f0f0;
      font-family: 'Arial', sans-serif;
    }

    #game-board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      gap: 5px;
    }

    .cell {
      width: 100px;
      height: 100px;
      background-color: #fff;
      border: 1px solid #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 24px;
      cursor: pointer;
    }

    #players {
      text-align: center;
      margin-bottom: 20px;
    }

    #winner-message {
      text-align: center;
      font-size: 1.5em;
      font-weight: bold;
      margin-top: 20px;
    }

    #restart-btn {
      display: block;
      margin: 20px auto;
      padding: 10px 20px;
      background-color: #4CAF50;
      color: #fff;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
    }

    .animated {
      animation: scaleUp 0.5s;
    }

    @keyframes scaleUp {
      0% {
        transform: scale(0);
      }
      100% {
        transform: scale(1);
      }
    }
  </style>
</head>

<body>
  <%- include('gamenav.ejs') %>
  
  <div id="players">
    <label for="player1">Player One Name:</label>
    <input type="text" id="player1" placeholder="Player One">
    <br>
    <label for="player2">Player Two Name:</label>
    <input type="text" id="player2" placeholder="Player Two">
  </div>

  <div id="game-board"></div>
  <div id="winner-message"></div>
  <button id="restart-btn" onclick="restartGame()">Restart Game</button>

  <script>
 
  document.addEventListener('DOMContentLoaded', () => {
    const board = document.getElementById('game-board');
    const player1Input = document.getElementById('player1');
    const player2Input = document.getElementById('player2');
    const winnerMessage = document.getElementById('winner-message');
    const restartBtn = document.getElementById('restart-btn');
    let currentPlayer = 'X';
    let player1Name = '';
    let player2Name = '';
    let gameBoard = ['', '', '', '', '', '', '', '', ''];
    let gameActive = true;

    function createCell(index) {
      const cell = document.createElement('div');
      cell.classList.add('cell');
      cell.dataset.index = index;
      cell.addEventListener('click', () => handleCellClick(index));
      return cell;
    }

    function renderBoard() {
      board.innerHTML = '';
      gameBoard.forEach((value, index) => {
        const cell = createCell(index);
        cell.textContent = value;
        board.appendChild(cell);
      });
    }

    function handleCellClick(index) {
      if (gameBoard[index] === '' && gameActive) {
        gameBoard[index] = currentPlayer;
        renderBoard();
        const winner = checkWinner();
        if (winner) {
          displayWinner(winner);
        } else {
          currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
        }
      }
    }

    function checkWinner() {
      const winPatterns = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
        [0, 4, 8], [2, 4, 6]             // Diagonals
      ];

      for (const pattern of winPatterns) {
        const [a, b, c] = pattern;
        if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
          gameActive = false;
          return gameBoard[a];
        }
      }

      if (!gameBoard.includes('')) {
        gameActive = false;
        return 'draw';
      }

      return null;
    }

    function displayWinner(winner) {
      winnerMessage.textContent = winner === 'draw' ? "It's a draw!" : `Player ${winner} wins!`;
      winnerMessage.classList.add('animated');
      restartBtn.style.display = 'block';
    }

    function restartGame() {
      player1Name = player1Input.value || 'Player One';
      player2Name = player2Input.value || 'Player Two';
      currentPlayer = 'X';
      gameBoard = ['', '', '', '', '', '', '', '', ''];
      gameActive = true;
      winnerMessage.textContent = '';
      winnerMessage.classList.remove('animated');
      restartBtn.style.display = 'none';
      renderBoard();
    }

    restartBtn.addEventListener('click', restartGame);

    renderBoard();
  });


  </script>
  <style>
    body{
      background-color: aqua;
    }
  </style>
</body>

</html>
