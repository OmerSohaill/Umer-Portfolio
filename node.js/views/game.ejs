<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Snake Game</title>
  <%- include('gamenav.ejs') %>
  <style>
    body {
      display: flex;
      flex-direction: column;
      align-items: center;
      height: 100vh;
      margin: 0;
      background-image: url('https://images.unsplash.com/photo-1595757872761-992fd6d3ab25?q=80&w=1776&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D');
      font-family: 'Arial', sans-serif;
      background-repeat: none;
    }

    canvas {
      border: 1px solid #ddd;
    }

    #result {
      margin-top: 20px;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <audio id="eatSound" src="eat.mp3"></audio>
  <audio id="gameOverSound" src="gameover.mp3"></audio>

  <canvas id="snakeCanvas" width="600" height="600"></canvas>
  <div id="result">Score: 0</div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const canvas = document.getElementById('snakeCanvas');
      const ctx = canvas.getContext('2d');
      const resultElement = document.getElementById('result');
      const eatSound = document.getElementById('eatSound');
      const gameOverSound = document.getElementById('gameOverSound');

      const boxSize = 20;
      let snake = [{ x: 10, y: 10 }];
      let food = { x: 15, y: 15 };
      let direction = 'right';
      let score = 0;

      function draw() {
        // Clear the canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Draw the snake
        ctx.fillStyle = '#3498db';
        snake.forEach(segment => ctx.fillRect(segment.x * boxSize, segment.y * boxSize, boxSize, boxSize));

        // Draw the food
        ctx.fillStyle = '#e74c3c';
        ctx.fillRect(food.x * boxSize, food.y * boxSize, boxSize, boxSize);
      }

      function update() {
        // Move the snake
        const head = { ...snake[0] };

        switch (direction) {
          case 'up':
            head.y--;
            break;
          case 'down':
            head.y++;
            break;
          case 'left':
            head.x--;
            break;
          case 'right':
            head.x++;
            break;
        }

        // Check for collisions with walls
        if (head.x < 0 || head.x >= canvas.width / boxSize || head.y < 0 || head.y >= canvas.height / boxSize) {
          playGameOverSound();
          gameOver();
          return;
        }

        // Check for collisions with food
        if (head.x === food.x && head.y === food.y) {
          // Increase the snake length
          snake.unshift({ ...head });

          // Move the food to a new random position
          food = { x: Math.floor(Math.random() * (canvas.width / boxSize)), y: Math.floor(Math.random() * (canvas.height / boxSize)) };

          // Increase the score
          score += 10;
          updateScore();

          // Play eat sound
          playEatSound();
        } else {
          // Move the snake
          snake.pop();
          snake.unshift({ ...head });
        }
      }

      function updateScore() {
        resultElement.textContent = `Score: ${score}`;
      }

      function gameOver() {
        setTimeout(() => {
          alert(`Game Over! Your score: ${score}`);

          // Restart the game
          snake = [{ x: 10, y: 10 }];
          direction = 'right';
          score = 0;
          updateScore();
        }, 100);
      }

      function playEatSound() {
        eatSound.play();
      }

      function playGameOverSound() {
        gameOverSound.play();
      }

      function gameLoop() {
        draw();
        update();
      }

      document.addEventListener('keydown', event => {
        switch (event.key) {
          case 'ArrowUp':
            direction = 'up';
            break;
          case 'ArrowDown':
            direction = 'down';
            break;
          case 'ArrowLeft':
            direction = 'left';
            break;
          case 'ArrowRight':
            direction = 'right';
            break;
        }
      });

      setInterval(gameLoop, 100);
    });
  </script>
</body>
</html>
